# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]

# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

# Суть сложности hard: Решите задачу в одну строку

print("\nTask 1")
print ("matrix_rotate =",list(map(list,(zip(*matrix)))))

# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:
number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""

import re
print("\nTask 2")
number=re.findall(r'\d',number)
max_index=0
index=0
list_of_numbers=[]
proizvedenie_max = 1
for num in number:
    index+=1
    proizvedenie_new = 1
    if len(list_of_numbers)<5:
        list_of_numbers.append(num)
        proizvedenie_max*=int(num)
    list_of_numbers.pop(0)
    list_of_numbers.append(num)
    for el in list_of_numbers:
        proizvedenie_new*=int(el)
    if proizvedenie_new>proizvedenie_max:
        max_index=index-5
        proizvedenie_max=proizvedenie_new
print("произведение =",proizvedenie_max)
for i in range(0,5):
    print("[{}] - {}".format(max_index+i,number[max_index+i]))

# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.

print("\nTask 3")
#elements=[[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8]]
elements=[[1,5],[2,3],[3,1],[4,7],[5,2],[6,8],[7,6],[8,4]]
def proverka(elements):
    #проверка строк и стобцов
    new_elements=list(map(list,zip(*elements)))
    for rows in new_elements:
        for el in rows:
            if rows.count(el)>1:
                print("совпадение в строках или столбцах",el)
                return "YES"
    #проверка диагоналей
    counter=0
    for el in elements:
        counter+=1
        for other in elements[counter:]:
            if max(el[0],other[0])-min(el[0],other[0])==max(el[1],other[1])-min(el[1],other[1]):
                print("совпадение по диагоналям",el,other)
                return "YES"
    return "NO"

print(proverka(elements))